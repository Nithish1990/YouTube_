import java.io.*;

class EraserThread implements Runnable {
    private boolean stop;
    public EraserThread(String prompt) {
        System.out.print(prompt);
    }
    public void run () {
        stop = true;
        while (stop) {
            System.out.print("\010*");
            try {
                Thread.currentThread().sleep(1);
            } catch(InterruptedException ie) {
                ie.printStackTrace();
            }
        }
    }
    public void stopMasking() {
        this.stop = false;
    }
}

class PasswordField {
    public static String readPassword (String prompt) {
        EraserThread et = new EraserThread(prompt);
        Thread mask = new Thread(et);
        mask.start();

        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        String password = "";

        try {
            password = in.readLine();
        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
        et.stopMasking();
        return password;
    }
}
public class Main {
    public static void main(String argv[]) {
        String password = PasswordField.readPassword("Enter password: ");
        System.out.println("The password entered is: "+password);
    }
}






watchpage
/*


like dislike
//            case 1: // -> for like
//                if (Application.getApplication().getCurrentUser().getUserType() == UserType.SIGNED) {
//                    if(((SignedViewer)Application.getApplication().getCurrentUser()).getLikedVideo().getOrDefault(video.getUrl(),false)==false){
//                        ((SignedViewer) Application.getApplication().getCurrentUser()).getLikedVideo().put(video.getUrl(),true);
//                        Application.getApplication().getDatabaseManager().getVideoBucket().get(video.getUrl()).setLikesCount(video.getLikesCount() + 1);
//                        if(video.getDislikesCount()!=0)
//                        Application.getApplication().getDatabaseManager().getVideoBucket().get(video.getUrl()).setDislikesCount(video.getDislikesCount()-1);
//                    }
//                }
//                else{
//                    watchPage.showWarning();
//                }
//                break;
//            case 2: // -> dislike
//                if(Application.getApplication().getCurrentUser().getUserType() == UserType.SIGNED) {
//                    if(((SignedViewer)Application.getApplication().getCurrentUser()).getLikedVideo().getOrDefault(video.getUrl(),false)){
//                        ((SignedViewer) Application.getApplication().getCurrentUser()).getLikedVideo().put(video.getUrl(),false);
//                        if(video.getLikesCount()!=0)
//                            Application.getApplication().getDatabaseManager().getVideoBucket().get(video.getUrl()).setLikesCount(video.getLikesCount() - 1);
//                        Application.getApplication().getDatabaseManager().getVideoBucket().get(video.getUrl()).setDislikesCount(video.getDislikesCount()+1);
//                    }
//                }
//                else
//                    watchPage.showWarning();
//
//                break;

private void likeShareSubscribe(Video video,int userInput) {
        switch (userInput) {
            case 2:
                setLikes(video,true);
                break;
            case 3:
                setLikes(video,false);
                break;
            case 4://->share
                watchPage.displayUrl(video);
                break;
            case 5:
                if(Application.getCurrentUser().getUserType() == UserType.SIGNED){
                    if(!((SignedViewer) Application.getCurrentUser()).getSubscribedChannels().getOrDefault(video.channel.getChannelUrl(), false)){
                        ((SignedViewer) Application.getCurrentUser()).getSubscribedChannels().put(video.channel.getChannelUrl(),true);
                        video.channel.setSubscribersCount(video.channel.getSubscribersCount()+1);
                    }else{
                        if(video.channel.getSubscribersCount() !=0) {
                            ((SignedViewer) Application.getApplication().getCurrentUser()).getSubscribedChannels().put(video.channel.getChannelUrl(),false);
                            video.channel.setSubscribersCount(video.channel.getSubscribersCount() - 1);
                        }
                    }
                }
                break;
        }
    }
 */

 1 Account Settings
 2 Edit profile
 3 switch channel